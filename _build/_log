### Starting build.
# Target: Cards.mli.depends, tags: { package(ANSITerminal), package(oUnit), package(yojson), extension:mli, file:Cards.mli, ocaml, ocamldep, quiet, traverse }
ocamlfind ocamldep -package oUnit -package yojson -package ANSITerminal -modules Cards.mli > Cards.mli.depends # cached
# Target: Cards.cmi, tags: { package(ANSITerminal), package(oUnit), package(yojson), byte, compile, extension:mli, file:Cards.mli, interf, ocaml, quiet, traverse }
ocamlfind ocamlc -c -package oUnit -package yojson -package ANSITerminal -o Cards.cmi Cards.mli # cached
# Target: Cards.ml.depends, tags: { package(ANSITerminal), package(oUnit), package(yojson), extension:ml, file:Cards.ml, ocaml, ocamldep, quiet, traverse }
ocamlfind ocamldep -package oUnit -package yojson -package ANSITerminal -modules Cards.ml > Cards.ml.depends # cached
# Target: Cards.cmo, tags: { package(ANSITerminal), package(oUnit), package(yojson), byte, compile, extension:cmo, extension:ml, file:Cards.cmo, file:Cards.ml, implem, ocaml, quiet, traverse }
ocamlfind ocamlc -c -package oUnit -package yojson -package ANSITerminal -o Cards.cmo Cards.ml # cached
# Target: Chip.mli.depends, tags: { package(ANSITerminal), package(oUnit), package(yojson), extension:mli, file:Chip.mli, ocaml, ocamldep, quiet, traverse }
ocamlfind ocamldep -package oUnit -package yojson -package ANSITerminal -modules Chip.mli > Chip.mli.depends # cached
# Target: Chip.cmi, tags: { package(ANSITerminal), package(oUnit), package(yojson), byte, compile, extension:mli, file:Chip.mli, interf, ocaml, quiet, traverse }
ocamlfind ocamlc -c -package oUnit -package yojson -package ANSITerminal -o Chip.cmi Chip.mli # cached
# Target: Chip.ml.depends, tags: { package(ANSITerminal), package(oUnit), package(yojson), extension:ml, file:Chip.ml, ocaml, ocamldep, quiet, traverse }
ocamlfind ocamldep -package oUnit -package yojson -package ANSITerminal -modules Chip.ml > Chip.ml.depends # cached
# Target: Chip.cmo, tags: { package(ANSITerminal), package(oUnit), package(yojson), byte, compile, extension:cmo, extension:ml, file:Chip.cmo, file:Chip.ml, implem, ocaml, quiet, traverse }
ocamlfind ocamlc -c -package oUnit -package yojson -package ANSITerminal -o Chip.cmo Chip.ml # cached
# Target: Blackjack.mli.depends, tags: { package(ANSITerminal), package(oUnit), package(yojson), extension:mli, file:Blackjack.mli, ocaml, ocamldep, quiet, traverse }
ocamlfind ocamldep -package oUnit -package yojson -package ANSITerminal -modules Blackjack.mli > Blackjack.mli.depends # cached
# Target: Command.mli.depends, tags: { package(ANSITerminal), package(oUnit), package(yojson), extension:mli, file:Command.mli, ocaml, ocamldep, quiet, traverse }
ocamlfind ocamldep -package oUnit -package yojson -package ANSITerminal -modules Command.mli > Command.mli.depends # cached
# Target: Command.cmi, tags: { package(ANSITerminal), package(oUnit), package(yojson), byte, compile, extension:mli, file:Command.mli, interf, ocaml, quiet, traverse }
ocamlfind ocamlc -c -package oUnit -package yojson -package ANSITerminal -o Command.cmi Command.mli # cached
# Target: Player.mli.depends, tags: { package(ANSITerminal), package(oUnit), package(yojson), extension:mli, file:Player.mli, ocaml, ocamldep, quiet, traverse }
ocamlfind ocamldep -package oUnit -package yojson -package ANSITerminal -modules Player.mli > Player.mli.depends
# Target: Player.cmi, tags: { package(ANSITerminal), package(oUnit), package(yojson), byte, compile, extension:mli, file:Player.mli, interf, ocaml, quiet, traverse }
ocamlfind ocamlc -c -package oUnit -package yojson -package ANSITerminal -o Player.cmi Player.mli
# Target: Blackjack.cmi, tags: { package(ANSITerminal), package(oUnit), package(yojson), byte, compile, extension:mli, file:Blackjack.mli, interf, ocaml, quiet, traverse }
ocamlfind ocamlc -c -package oUnit -package yojson -package ANSITerminal -o Blackjack.cmi Blackjack.mli
# Target: Blackjack.ml.depends, tags: { package(ANSITerminal), package(oUnit), package(yojson), extension:ml, file:Blackjack.ml, ocaml, ocamldep, quiet, traverse }
ocamlfind ocamldep -package oUnit -package yojson -package ANSITerminal -modules Blackjack.ml > Blackjack.ml.depends
# Target: Blackjack.cmo, tags: { package(ANSITerminal), package(oUnit), package(yojson), byte, compile, extension:cmo, extension:ml, file:Blackjack.cmo, file:Blackjack.ml, implem, ocaml, quiet, traverse }
ocamlfind ocamlc -c -package oUnit -package yojson -package ANSITerminal -o Blackjack.cmo Blackjack.ml
# Target: Player.ml.depends, tags: { package(ANSITerminal), package(oUnit), package(yojson), extension:ml, file:Player.ml, ocaml, ocamldep, quiet, traverse }
ocamlfind ocamldep -package oUnit -package yojson -package ANSITerminal -modules Player.ml > Player.ml.depends
# Target: Player.cmo, tags: { package(ANSITerminal), package(oUnit), package(yojson), byte, compile, extension:cmo, extension:ml, file:Player.cmo, file:Player.ml, implem, ocaml, quiet, traverse }
ocamlfind ocamlc -c -package oUnit -package yojson -package ANSITerminal -o Player.cmo Player.ml
# Target: Command.ml.depends, tags: { package(ANSITerminal), package(oUnit), package(yojson), extension:ml, file:Command.ml, ocaml, ocamldep, quiet, traverse }
ocamlfind ocamldep -package oUnit -package yojson -package ANSITerminal -modules Command.ml > Command.ml.depends # cached
# Target: Command.cmo, tags: { package(ANSITerminal), package(oUnit), package(yojson), byte, compile, extension:cmo, extension:ml, file:Command.cmo, file:Command.ml, implem, ocaml, quiet, traverse }
ocamlfind ocamlc -c -package oUnit -package yojson -package ANSITerminal -o Command.cmo Command.ml # cached
# Compilation successful.
